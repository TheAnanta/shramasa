// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// schema.prisma
// schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  ADMIN
  USER
}

model DeletedUser {
  deleted_Id String @id @default(uuid())
  name       String
  email      String @unique
}

model User {
  userId    String    @id
  name      String
  email     String    @unique
  phone     String    @unique
  role      UserRole
  avatarId  String?
  addresses Address[]
}

model Address {
  name        String  @default("Home")
  isDefault   Boolean @default(false)
  addressId   String  @id
  userId      String
  houseNumber String
  floor       String
  apartment   String
  landmark    String
  address     String
  pincode     Int
  user        User    @relation(fields: [userId], references: [userId])
}

model Category {
  categoryId String @id
  name       String
  image      String
}

model SubCategory {
  subCategoryId String @id
  name          String
  image         String
  categoryId    String
}

model Product {
  productId     String   @id
  name          String
  description   String
  category      String
  subCategory   String
  images        String[]
  ingredients   Json[]
  discount      Float
  price         Float[]
  variants      String[]
  howToUse      String
  videoLink     String
  rating        Float
  videoProvider String
  reviews       Json[]
  reviewCount   Int
  stock         Int[]    @default([0])
  dateAdded     DateTime @default(now())
}

model Cart {
  cartId Int    @id @default(autoincrement())
  userId String
  items  Json[]
}

model Wishlist {
  userId String   @id
  items  String[]
}

model Review {
  reviewId   String   @id
  userId     String
  rating     Float
  reviewText String
  dateAdded  DateTime @default(now())
}

//___________________________________________________________________________________________
// Order Management
enum PaymentStatus {
  PENDING // indicates that the payment is pending
  SUCCESS // indicates that the payment was successful
  FAILED // indicates that the payment has failed due to any reason, eg. payment failure, user cancellation
  CANCELLED // indicates that payment has been cancelled after success
  REFUNDED // indicates that the payment has been refunded
}

enum PaymentMethod {
  COD
  UPI
  NETBANKING
  CREDITCARD
  DEBITCARD
  WALLET
}

enum OrderStatus {
  INPROGRESS //Indicates if user is in progress of placing order
  PROCESSING //Indicates that the user has placed the order and is being processed
  CONFIRMED //Indicates that the order has been confirmed by Shramasa team
  DISPATCHED // Indicates that the order has been dispatched
  DELIVERED //Indicates that the order has been delivered
  CANCELLED //Indicates that the order has been cancelled by the user
}

enum DiscountType {
  PERCENTAGE
  AMOUNT
}

model Order {
  orderId         String        @id @default(uuid())
  userId          String
  items           Json[]
  status          OrderStatus   @default(INPROGRESS)
  paymentId       String
  payment         Payment       @relation(fields: [paymentId], references: [paymentId])
  deliveryAddress String
  deliveryDate    DateTime?
  orderDate       DateTime      @default(now())
  couponCode      String?
  discount        Float?
  discountType    DiscountType?
  additionalInfo  Json?
}

model Payment {
  paymentId      String         @id
  amount         Float
  status         PaymentStatus  @default(PENDING)
  method         PaymentMethod?
  paymentDetails Json?
  Order          Order[]
}

model Coupon {
  couponId     String       @id
  code         String
  discount     Float
  type         DiscountType
  validTill    DateTime
  isActive     Boolean
  maxDiscount  Float
  minCartValue Float
}

model Carousel {
  carouselId String @id
  image      String
  link       String
}
